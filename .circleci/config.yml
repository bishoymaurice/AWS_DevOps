version: 2.1

jobs:

  lint:
    docker:
      - image: python:3.7.3-stretch
    
    working_directory: ~/repo
    
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "./docker/requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            cd docker
            python3 -m venv ~/.venv
            source ~/.venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ~/docker/.venv
          key: v1-dependencies-{{ checksum "./docker/requirements.txt" }}
      - run:
          name: Lint Dockerfile and app source code
          command: |
            cd docker
            source ~/.venv/bin/activate
            pip install pylint
            make lint

  build:
    docker:
      - image: circleci/buildpack-deps:stretch
    
    working_directory: ~/repo
    
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-dockerfile-{{ checksum "./docker/Dockerfile" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-dockerfile
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            cd docker/app
            sed -i 's/REFERENCE_NO/${CIRCLE_WORKFLOW_ID}/g' index.html
            cd ..
            sed -i 's/TARGET_TAG/${CIRCLE_WORKFLOW_ID}/g' Makefile
            make build
      - run:
          name: Push Docker image to docker hub
          command: |
            cd docker
            make push
      - save_cache:
          paths:
            - ~/docker
          key: v1-dependencies-{{ checksum "./docker/Dockerfile" }}

  deploy:
    docker:
      - image: debian:stretch-slim
    
    working_directory: ~/repo
    
    steps:
      - checkout
      - restore_cache:
          keys:
            - debian:stretch-slim
      - run:
          name: Install dependencies
          command: |
            apt update
            apt install -y make curl
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
            echo "$(<kubectl.sha256) kubectl" | sha256sum --check
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - run:
          name: Build Docker image
          command: |
            cd kube-deploy
            make undeploy
            sed -i 's/TARGET_TAG/${CIRCLE_WORKFLOW_ID}/g' deployment.yaml
            make deploy
      - run:
          name: Push Docker image to docker hub
          command: |
            cd docker
            make push
      - save_cache:
          paths:
            - ~/kube-deploy
          key: debian:stretch-slim

workflows:
  default:
    jobs:
      - build
      - deploy:
          requires: [build]
      # - lint
      # - build:
      #     requires: [lint]